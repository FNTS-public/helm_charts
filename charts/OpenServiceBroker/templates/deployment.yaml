{{- $fullName := include "helm.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  namespace: {{ .Values.namespaceOverride | default "default" }}
  labels:
    {{ include "helm.labels.standard" . | indent 4 | trim }}
    {{ include "helm.labels.custom" . | indent 4 | trim }}
  {{- if .Values.deployment.annotations }}
  annotations:
    {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  {{- if not .Values.scaling }}
  replicas: {{ if and (not (kindIs "invalid" .Values.deployment.replicas)) (default "0" .Values.deployment.replicas | toString) }}{{ .Values.deployment.replicas }}{{ else }}{{ 1 }}{{ end }}
  {{- end }}
  selector:
    matchLabels:
      {{ include "helm.labels.selector" . | indent 6 | trim }}
  template:
    metadata:
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        {{ include "helm.labels.standard" . | indent 8 | trim }}
        {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{ if .Values.deployment.security.pod.enabled -}}{{ include "helm.podSecurityContext " . | indent 6 | trim }}{{ end }}
      containers:
        - name: service-broker
          {{ if .Values.deployment.security.container.enabled -}}{{ include "helm.containerSecurityContext " $ | indent 10 | trim }}{{ end }}
          image: "{{ .Values.image.repository | default "ghcr.io/fnts-public/openservicebroker" }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          env:
            - name: GIT_REMOTE
              value: {{ .Values.config.git.address | default "UNCONFIGURED" }}
            - name: GIT_REMOTE_BRANCH
              value: {{ .Values.config.git.branch | default "UNCONFIGURED" }}
            - name: GIT_REMOTE_PATH
              value: {{ .Values.config.git.path | default "/tmp/git" }}

          envFrom:
            - secretRef:
                name: {{ .Values.existingSecret | default $fullName }}
          volumeMounts:
            - name: gitpath
              mountPath: {{ .Values.config.path | default "/tmp/git" }}
            - name: tmp
              mountPath: /tmp
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{ include "helm.resources" . | indent 10 | trim }}
      volumes:
        - name: gitpath
          emptyDir: {}
        - name: tmp
          emptyDir: {}
